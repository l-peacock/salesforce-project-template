# This workflow will automatically generate and commit ApexDocs to the `/docs/` directory
# to be served on GitHub Pages

name: apexdocs

on:
  push:
    branches: [ "main" ] 

permissions:
  contents: write

jobs:
  generate-apex-docs:
    permissions:
      contents: write # for the action to checkout, and commit generated documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install apexdocs
        run: npm i -g @cparra/apexdocs
      - name: Re-generate Apexdocs
        run: |
          # Clean-up existing Apex docs
          rm -rf docs
          # Re-generate the documentation
          apexdocs-generate -s packages/core/main/default/classes -t docs -r -p global public
      - name: Commit new documentation
        run: |
          # Configure the GitHub actions agent's Git identity
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Switch to the docs branch, where documentation is served from
          git fetch
          git switch docs
          git pull

          # Stage any documentation changes
          git add docs

          if [[ `git status --porcelain` ]]; then
            # If there are changes, commit and push
            git commit -m "ðŸ¤– Automated Documentation"
            git push
          else
            # If there are no changes, do nothing
            echo No documentation changes to commit
          fi
